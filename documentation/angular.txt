Structure:
  public
    /js
      /controllers
        ~ contains all angular controllers
      /directives
        ~ contains all angular directives
      /filters
        ~ contains all angular filters
      /services
        ~ contains all angular services
      /global
        ~ contains global functions and variables

      /wm-controller.js       # all controllers combined
      /wm-directives.js       # all directives combined
      /wm-filters.js          # all filters combined
      /wm-services.js         # all services combined
      /wm.js                  # contains angular app, states, listeners

States:
  The main index.jade file contains routing all the different states.
  States are stored in public/states as html files.

Create new states:

  1. Create the state in wm.js config.
  2. Create the html state partial in /public/states.
  3. Create the controller (if needed) in /public/js/controllers.
  4. Add the ui-sref="{state}" so that you can actually get there.

Authentication:

- We use JWT to genereate tokens.
  - In those tokens we place: username, id, role, expiry date of token.
- User logs in, we give them token if successful login.
  - This means sending token to front-end, saving it in $localStorage.

- On stateChanges we get token from $localStorage, decrpyt and check if:
  - token is expired: log them out.
  - if user has permission to enter certain pages.

- On page refreshes we validate the users token from $localStorage.
  - If it is not valid (expired, creds don't match), then we remove the token
    from $localStorage and log user out.
  - If it is valid, then we still remove the token from $localStorage and
    give the user a new token.
